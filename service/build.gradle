plugins {
  // Provide convenience executables for trying out the examples.
  id 'application'
  // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
  id 'com.google.protobuf' version '0.8.13'
  // Generate IntelliJ IDEA's .idea & .iml project files
  id 'idea'
}

repositories {
  jcenter()
  maven { // The google mirror is less flaky than mavenCentral()
    url "https://maven-central.storage-download.googleapis.com/maven2/"
  }
  mavenCentral()
  mavenLocal()
}

//sourceCompatibility = 1.7
//targetCompatibility = 1.7

// IMPORTANT: You probably want the non-SNAPSHOT version of gRPC. Make sure you
// are looking at a tagged version of the example and not "master"!

// Feel free to delete the comment at the next line. It is just for safely
// updating the version in our release process.
def grpcVersion = '1.33.1' // CURRENT_GRPC_VERSION
def protobufVersion = '3.12.0'
def protocVersion = protobufVersion

dependencies {
  implementation "io.grpc:grpc-protobuf:${grpcVersion}"
  implementation "io.grpc:grpc-stub:${grpcVersion}"
  compileOnly "org.apache.tomcat:annotations-api:6.0.53"

  runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

  implementation "com.google.inject:guice:4.2.3"
  implementation "org.mybatis:mybatis:3.5.6"
  implementation "com.zaxxer:HikariCP:3.4.5"
}

protobuf {
  protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
  plugins {
    grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
  }
  generateProtoTasks {
    all()*.plugins { grpc {} }
  }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
  main {
    java {
      srcDirs 'build/generated/source/proto/main/grpc'
      srcDirs 'build/generated/source/proto/main/java'
    }
  }
}

startScripts.enabled = false

task helloWorldServer(type: CreateStartScripts) {
  mainClassName = 'io.grpc.examples.helloworld.HelloWorldServer'
  applicationName = 'hello-world-server'
  outputDir = new File(project.buildDir, 'tmp')
  classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
  from(helloWorldServer)
  fileMode = 0755
}
